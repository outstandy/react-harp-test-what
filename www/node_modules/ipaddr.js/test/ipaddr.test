var ipaddr;ipaddr=require("../lib/ipaddr");module.exports={"should define main classes":function(e){e.ok(ipaddr.IPv4!=null,"defines IPv4 class");e.ok(ipaddr.IPv6!=null,"defines IPv6 class");return e.done()},"can construct IPv4 from octets":function(e){e.doesNotThrow(function(){return new ipaddr.IPv4([192,168,1,2])});return e.done()},"refuses to construct invalid IPv4":function(e){e.throws(function(){return new ipaddr.IPv4([300,1,2,3])});e.throws(function(){return new ipaddr.IPv4([8,8,8])});return e.done()},"converts IPv4 to string correctly":function(e){var a;a=new ipaddr.IPv4([192,168,1,1]);e.equal(a.toString(),"192.168.1.1");return e.done()},"returns correct kind for IPv4":function(e){var a;a=new ipaddr.IPv4([1,2,3,4]);e.equal(a.kind(),"ipv4");return e.done()},"allows to access IPv4 octets":function(e){var a;a=new ipaddr.IPv4([42,0,0,0]);e.equal(a.octets[0],42);return e.done()},"checks IPv4 address format":function(e){e.equal(ipaddr.IPv4.isIPv4("192.168.007.0xa"),true);e.equal(ipaddr.IPv4.isIPv4("1024.0.0.1"),true);e.equal(ipaddr.IPv4.isIPv4("8.0xa.wtf.6"),false);return e.done()},"validates IPv4 addresses":function(e){e.equal(ipaddr.IPv4.isValid("192.168.007.0xa"),true);e.equal(ipaddr.IPv4.isValid("1024.0.0.1"),false);e.equal(ipaddr.IPv4.isValid("8.0xa.wtf.6"),false);return e.done()},"parses IPv4 in several weird formats":function(e){e.deepEqual(ipaddr.IPv4.parse("192.168.1.1").octets,[192,168,1,1]);e.deepEqual(ipaddr.IPv4.parse("0xc0.168.1.1").octets,[192,168,1,1]);e.deepEqual(ipaddr.IPv4.parse("192.0250.1.1").octets,[192,168,1,1]);e.deepEqual(ipaddr.IPv4.parse("0xc0a80101").octets,[192,168,1,1]);e.deepEqual(ipaddr.IPv4.parse("030052000401").octets,[192,168,1,1]);e.deepEqual(ipaddr.IPv4.parse("3232235777").octets,[192,168,1,1]);return e.done()},"barfs at invalid IPv4":function(e){e.throws(function(){return ipaddr.IPv4.parse("10.0.0.wtf")});return e.done()},"matches IPv4 CIDR correctly":function(e){var a;a=new ipaddr.IPv4([10,5,0,1]);e.equal(a.match(ipaddr.IPv4.parse("0.0.0.0"),0),true);e.equal(a.match(ipaddr.IPv4.parse("11.0.0.0"),8),false);e.equal(a.match(ipaddr.IPv4.parse("10.0.0.0"),8),true);e.equal(a.match(ipaddr.IPv4.parse("10.0.0.1"),8),true);e.equal(a.match(ipaddr.IPv4.parse("10.0.0.10"),8),true);e.equal(a.match(ipaddr.IPv4.parse("10.5.5.0"),16),true);e.equal(a.match(ipaddr.IPv4.parse("10.4.5.0"),16),false);e.equal(a.match(ipaddr.IPv4.parse("10.4.5.0"),15),true);e.equal(a.match(ipaddr.IPv4.parse("10.5.0.2"),32),false);e.equal(a.match(a,32),true);return e.done()},"parses IPv4 CIDR correctly":function(e){var a;a=new ipaddr.IPv4([10,5,0,1]);e.equal(a.match(ipaddr.IPv4.parseCIDR("0.0.0.0/0")),true);e.equal(a.match(ipaddr.IPv4.parseCIDR("11.0.0.0/8")),false);e.equal(a.match(ipaddr.IPv4.parseCIDR("10.0.0.0/8")),true);e.equal(a.match(ipaddr.IPv4.parseCIDR("10.0.0.1/8")),true);e.equal(a.match(ipaddr.IPv4.parseCIDR("10.0.0.10/8")),true);e.equal(a.match(ipaddr.IPv4.parseCIDR("10.5.5.0/16")),true);e.equal(a.match(ipaddr.IPv4.parseCIDR("10.4.5.0/16")),false);e.equal(a.match(ipaddr.IPv4.parseCIDR("10.4.5.0/15")),true);e.equal(a.match(ipaddr.IPv4.parseCIDR("10.5.0.2/32")),false);e.equal(a.match(ipaddr.IPv4.parseCIDR("10.5.0.1/32")),true);e.throws(function(){return ipaddr.IPv4.parseCIDR("10.5.0.1")});e.throws(function(){return ipaddr.IPv4.parseCIDR("0.0.0.0/-1")});e.throws(function(){return ipaddr.IPv4.parseCIDR("0.0.0.0/33")});return e.done()},"detects reserved IPv4 networks":function(e){e.equal(ipaddr.IPv4.parse("0.0.0.0").range(),"unspecified");e.equal(ipaddr.IPv4.parse("0.1.0.0").range(),"unspecified");e.equal(ipaddr.IPv4.parse("10.1.0.1").range(),"private");e.equal(ipaddr.IPv4.parse("192.168.2.1").range(),"private");e.equal(ipaddr.IPv4.parse("224.100.0.1").range(),"multicast");e.equal(ipaddr.IPv4.parse("169.254.15.0").range(),"linkLocal");e.equal(ipaddr.IPv4.parse("127.1.1.1").range(),"loopback");e.equal(ipaddr.IPv4.parse("255.255.255.255").range(),"broadcast");e.equal(ipaddr.IPv4.parse("240.1.2.3").range(),"reserved");e.equal(ipaddr.IPv4.parse("8.8.8.8").range(),"unicast");return e.done()},"can construct IPv6 from 16bit parts":function(e){e.doesNotThrow(function(){return new ipaddr.IPv6([8193,3512,62778,0,0,0,0,1])});return e.done()},"can construct IPv6 from 8bit parts":function(e){e.doesNotThrow(function(){return new ipaddr.IPv6([32,1,13,184,245,58,0,0,0,0,0,0,0,0,0,1])});e.deepEqual(new ipaddr.IPv6([32,1,13,184,245,58,0,0,0,0,0,0,0,0,0,1]),new ipaddr.IPv6([8193,3512,62778,0,0,0,0,1]));return e.done()},"refuses to construct invalid IPv6":function(e){e.throws(function(){return new ipaddr.IPv6([1048575,0,0,0,0,0,0,1])});e.throws(function(){return new ipaddr.IPv6([1048575,0,0,0,0,0,1])});e.throws(function(){return new ipaddr.IPv6([65535,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1])});return e.done()},"converts IPv6 to string correctly":function(e){var a;a=new ipaddr.IPv6([8193,3512,62778,0,0,0,0,1]);e.equal(a.toNormalizedString(),"2001:db8:f53a:0:0:0:0:1");e.equal(a.toString(),"2001:db8:f53a::1");e.equal(new ipaddr.IPv6([0,0,0,0,0,0,0,1]).toString(),"::1");e.equal(new ipaddr.IPv6([8193,3512,0,0,0,0,0,0]).toString(),"2001:db8::");return e.done()},"returns correct kind for IPv6":function(e){var a;a=new ipaddr.IPv6([8193,3512,62778,0,0,0,0,1]);e.equal(a.kind(),"ipv6");return e.done()},"allows to access IPv6 address parts":function(e){var a;a=new ipaddr.IPv6([8193,3512,62778,0,0,42,0,1]);e.equal(a.parts[5],42);return e.done()},"checks IPv6 address format":function(e){e.equal(ipaddr.IPv6.isIPv6("2001:db8:F53A::1"),true);e.equal(ipaddr.IPv6.isIPv6("200001::1"),true);e.equal(ipaddr.IPv6.isIPv6("::ffff:192.168.1.1"),true);e.equal(ipaddr.IPv6.isIPv6("::ffff:300.168.1.1"),false);e.equal(ipaddr.IPv6.isIPv6("::ffff:300.168.1.1:0"),false);e.equal(ipaddr.IPv6.isIPv6("fe80::wtf"),false);return e.done()},"validates IPv6 addresses":function(e){e.equal(ipaddr.IPv6.isValid("2001:db8:F53A::1"),true);e.equal(ipaddr.IPv6.isValid("200001::1"),false);e.equal(ipaddr.IPv6.isValid("::ffff:192.168.1.1"),true);e.equal(ipaddr.IPv6.isValid("::ffff:300.168.1.1"),false);e.equal(ipaddr.IPv6.isValid("::ffff:300.168.1.1:0"),false);e.equal(ipaddr.IPv6.isValid("::ffff:222.1.41.9000"),false);e.equal(ipaddr.IPv6.isValid("2001:db8::F53A::1"),false);e.equal(ipaddr.IPv6.isValid("fe80::wtf"),false);e.equal(ipaddr.IPv6.isValid("2002::2:"),false);e.equal(ipaddr.IPv6.isValid(void 0),false);return e.done()},"parses IPv6 in different formats":function(e){e.deepEqual(ipaddr.IPv6.parse("2001:db8:F53A:0:0:0:0:1").parts,[8193,3512,62778,0,0,0,0,1]);e.deepEqual(ipaddr.IPv6.parse("fe80::10").parts,[65152,0,0,0,0,0,0,16]);e.deepEqual(ipaddr.IPv6.parse("2001:db8:F53A::").parts,[8193,3512,62778,0,0,0,0,0]);e.deepEqual(ipaddr.IPv6.parse("::1").parts,[0,0,0,0,0,0,0,1]);e.deepEqual(ipaddr.IPv6.parse("::").parts,[0,0,0,0,0,0,0,0]);return e.done()},"barfs at invalid IPv6":function(e){e.throws(function(){return ipaddr.IPv6.parse("fe80::0::1")});return e.done()},"matches IPv6 CIDR correctly":function(e){var a;a=ipaddr.IPv6.parse("2001:db8:f53a::1");e.equal(a.match(ipaddr.IPv6.parse("::"),0),true);e.equal(a.match(ipaddr.IPv6.parse("2001:db8:f53a::1:1"),64),true);e.equal(a.match(ipaddr.IPv6.parse("2001:db8:f53b::1:1"),48),false);e.equal(a.match(ipaddr.IPv6.parse("2001:db8:f531::1:1"),44),true);e.equal(a.match(ipaddr.IPv6.parse("2001:db8:f500::1"),40),true);e.equal(a.match(ipaddr.IPv6.parse("2001:db9:f500::1"),40),false);e.equal(a.match(a,128),true);return e.done()},"parses IPv6 CIDR correctly":function(e){var a;a=ipaddr.IPv6.parse("2001:db8:f53a::1");e.equal(a.match(ipaddr.IPv6.parseCIDR("::/0")),true);e.equal(a.match(ipaddr.IPv6.parseCIDR("2001:db8:f53a::1:1/64")),true);e.equal(a.match(ipaddr.IPv6.parseCIDR("2001:db8:f53b::1:1/48")),false);e.equal(a.match(ipaddr.IPv6.parseCIDR("2001:db8:f531::1:1/44")),true);e.equal(a.match(ipaddr.IPv6.parseCIDR("2001:db8:f500::1/40")),true);e.equal(a.match(ipaddr.IPv6.parseCIDR("2001:db9:f500::1/40")),false);e.equal(a.match(ipaddr.IPv6.parseCIDR("2001:db8:f53a::1/128")),true);e.throws(function(){return ipaddr.IPv6.parseCIDR("2001:db8:f53a::1")});e.throws(function(){return ipaddr.IPv6.parseCIDR("2001:db8:f53a::1/-1")});e.throws(function(){return ipaddr.IPv6.parseCIDR("2001:db8:f53a::1/129")});return e.done()},"converts between IPv4-mapped IPv6 addresses and IPv4 addresses":function(e){var a,r;a=ipaddr.IPv4.parse("77.88.21.11");r=a.toIPv4MappedAddress();e.deepEqual(r.parts,[0,0,0,0,0,65535,19800,5387]);e.deepEqual(r.toIPv4Address().octets,a.octets);return e.done()},"refuses to convert non-IPv4-mapped IPv6 address to IPv4 address":function(e){e.throws(function(){return ipaddr.IPv6.parse("2001:db8::1").toIPv4Address()});return e.done()},"detects reserved IPv6 networks":function(e){e.equal(ipaddr.IPv6.parse("::").range(),"unspecified");e.equal(ipaddr.IPv6.parse("fe80::1234:5678:abcd:0123").range(),"linkLocal");e.equal(ipaddr.IPv6.parse("ff00::1234").range(),"multicast");e.equal(ipaddr.IPv6.parse("::1").range(),"loopback");e.equal(ipaddr.IPv6.parse("fc00::").range(),"uniqueLocal");e.equal(ipaddr.IPv6.parse("::ffff:192.168.1.10").range(),"ipv4Mapped");e.equal(ipaddr.IPv6.parse("::ffff:0:192.168.1.10").range(),"rfc6145");e.equal(ipaddr.IPv6.parse("64:ff9b::1234").range(),"rfc6052");e.equal(ipaddr.IPv6.parse("2002:1f63:45e8::1").range(),"6to4");e.equal(ipaddr.IPv6.parse("2001::4242").range(),"teredo");e.equal(ipaddr.IPv6.parse("2001:db8::3210").range(),"reserved");e.equal(ipaddr.IPv6.parse("2001:470:8:66::1").range(),"unicast");return e.done()},"is able to determine IP address type":function(e){e.equal(ipaddr.parse("8.8.8.8").kind(),"ipv4");e.equal(ipaddr.parse("2001:db8:3312::1").kind(),"ipv6");return e.done()},"throws an error if tried to parse an invalid address":function(e){e.throws(function(){return ipaddr.parse("::some.nonsense")});return e.done()},"correctly processes IPv4-mapped addresses":function(e){e.equal(ipaddr.process("8.8.8.8").kind(),"ipv4");e.equal(ipaddr.process("2001:db8:3312::1").kind(),"ipv6");e.equal(ipaddr.process("::ffff:192.168.1.1").kind(),"ipv4");return e.done()},"correctly converts IPv6 and IPv4 addresses to byte arrays":function(e){e.deepEqual(ipaddr.parse("1.2.3.4").toByteArray(),[1,2,3,4]);e.deepEqual(ipaddr.parse("2a00:1450:8007::68").toByteArray(),[42,0,20,80,128,7,0,0,0,0,0,0,0,0,0,104]);return e.done()},"correctly parses 1 as an IPv4 address":function(e){e.equal(ipaddr.IPv6.isValid("1"),false);e.equal(ipaddr.IPv4.isValid("1"),true);e.deepEqual(new ipaddr.IPv4([0,0,0,1]),ipaddr.parse("1"));return e.done()},"correctly detects IPv4 and IPv6 CIDR addresses":function(e){e.deepEqual([ipaddr.IPv6.parse("fc00::"),64],ipaddr.parseCIDR("fc00::/64"));e.deepEqual([ipaddr.IPv4.parse("1.2.3.4"),5],ipaddr.parseCIDR("1.2.3.4/5"));return e.done()},"does not consider a very large or very small number a valid IP address":function(e){e.equal(ipaddr.isValid("4999999999"),false);e.equal(ipaddr.isValid("-1"),false);return e.done()},"does not hang on ::8:8:8:8:8:8:8:8:8":function(e){e.equal(ipaddr.IPv6.isValid("::8:8:8:8:8:8:8:8:8"),false);return e.done()},"subnetMatch does not fail on empty range":function(e){ipaddr.subnetMatch(new ipaddr.IPv4([1,2,3,4]),{},false);ipaddr.subnetMatch(new ipaddr.IPv4([1,2,3,4]),{subnet:[]},false);return e.done()},"subnetMatch returns default subnet on empty range":function(e){e.equal(ipaddr.subnetMatch(new ipaddr.IPv4([1,2,3,4]),{},false),false);e.equal(ipaddr.subnetMatch(new ipaddr.IPv4([1,2,3,4]),{subnet:[]},false),false);return e.done()},"is able to determine IP address type from byte array input":function(e){e.equal(ipaddr.fromByteArray([127,0,0,1]).kind(),"ipv4");e.equal(ipaddr.fromByteArray([32,1,13,184,245,58,0,0,0,0,0,0,0,0,0,1]).kind(),"ipv6");e.throws(function(){return ipaddr.fromByteArray([1])});return e.done()},"prefixLengthFromSubnetMask returns proper CIDR notation for standard IPv4 masks":function(e){e.equal(ipaddr.IPv4.parse("255.255.255.255").prefixLengthFromSubnetMask(),32);e.equal(ipaddr.IPv4.parse("255.255.255.254").prefixLengthFromSubnetMask(),31);e.equal(ipaddr.IPv4.parse("255.255.255.252").prefixLengthFromSubnetMask(),30);e.equal(ipaddr.IPv4.parse("255.255.255.248").prefixLengthFromSubnetMask(),29);e.equal(ipaddr.IPv4.parse("255.255.255.240").prefixLengthFromSubnetMask(),28);e.equal(ipaddr.IPv4.parse("255.255.255.224").prefixLengthFromSubnetMask(),27);e.equal(ipaddr.IPv4.parse("255.255.255.192").prefixLengthFromSubnetMask(),26);e.equal(ipaddr.IPv4.parse("255.255.255.128").prefixLengthFromSubnetMask(),25);e.equal(ipaddr.IPv4.parse("255.255.255.0").prefixLengthFromSubnetMask(),24);e.equal(ipaddr.IPv4.parse("255.255.254.0").prefixLengthFromSubnetMask(),23);e.equal(ipaddr.IPv4.parse("255.255.252.0").prefixLengthFromSubnetMask(),22);e.equal(ipaddr.IPv4.parse("255.255.248.0").prefixLengthFromSubnetMask(),21);e.equal(ipaddr.IPv4.parse("255.255.240.0").prefixLengthFromSubnetMask(),20);e.equal(ipaddr.IPv4.parse("255.255.224.0").prefixLengthFromSubnetMask(),19);e.equal(ipaddr.IPv4.parse("255.255.192.0").prefixLengthFromSubnetMask(),18);e.equal(ipaddr.IPv4.parse("255.255.128.0").prefixLengthFromSubnetMask(),17);e.equal(ipaddr.IPv4.parse("255.255.0.0").prefixLengthFromSubnetMask(),16);e.equal(ipaddr.IPv4.parse("255.254.0.0").prefixLengthFromSubnetMask(),15);e.equal(ipaddr.IPv4.parse("255.252.0.0").prefixLengthFromSubnetMask(),14);e.equal(ipaddr.IPv4.parse("255.248.0.0").prefixLengthFromSubnetMask(),13);e.equal(ipaddr.IPv4.parse("255.240.0.0").prefixLengthFromSubnetMask(),12);e.equal(ipaddr.IPv4.parse("255.224.0.0").prefixLengthFromSubnetMask(),11);e.equal(ipaddr.IPv4.parse("255.192.0.0").prefixLengthFromSubnetMask(),10);e.equal(ipaddr.IPv4.parse("255.128.0.0").prefixLengthFromSubnetMask(),9);e.equal(ipaddr.IPv4.parse("255.0.0.0").prefixLengthFromSubnetMask(),8);e.equal(ipaddr.IPv4.parse("254.0.0.0").prefixLengthFromSubnetMask(),7);e.equal(ipaddr.IPv4.parse("252.0.0.0").prefixLengthFromSubnetMask(),6);e.equal(ipaddr.IPv4.parse("248.0.0.0").prefixLengthFromSubnetMask(),5);e.equal(ipaddr.IPv4.parse("240.0.0.0").prefixLengthFromSubnetMask(),4);e.equal(ipaddr.IPv4.parse("224.0.0.0").prefixLengthFromSubnetMask(),3);e.equal(ipaddr.IPv4.parse("192.0.0.0").prefixLengthFromSubnetMask(),2);e.equal(ipaddr.IPv4.parse("128.0.0.0").prefixLengthFromSubnetMask(),1);e.equal(ipaddr.IPv4.parse("0.0.0.0").prefixLengthFromSubnetMask(),0);e.equal(ipaddr.IPv4.parse("192.168.255.0").prefixLengthFromSubnetMask(),null);e.equal(ipaddr.IPv4.parse("255.0.255.0").prefixLengthFromSubnetMask(),null);return e.done()}};